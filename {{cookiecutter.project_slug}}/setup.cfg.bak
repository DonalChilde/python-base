{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

{%- set cli_module = {
    "Argparse":"cli.cli_argparse",
    "Click":"cli.cli_click",
    "Typer":"cli.cli_typer"
}%}

[metadata]
name = {{ cookiecutter.project_name }}
version = attr: {{ cookiecutter.project_slug }}.__version__
url = https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.rst
keywords = {{ cookiecutter.keywords }}
{%- if cookiecutter.open_source_license in license_classifiers %}
license = {{ cookiecutter.open_source_license }}
{%- endif %}
classifiers =
    Development Status :: 2 - Pre-Alpha
    Intended Audience :: Developers
    Natural Language :: English
    {%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}
    {%- endif %}
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10

[options]
zip_safe = False
include_package_data = True
package_dir=
    =src
packages = find:
tests_require = pytest
# setup_requires = pytest-runner

{%- if cookiecutter.project_type in ["Click","Typer","Argparse"] %}
[options.entry_points]
console_scripts =
    {{ cookiecutter.cli_entry_point }} = {{ cookiecutter.project_slug }}.{{ cli_module[cookiecutter.project_type] }}:main
{%- endif %}

[options.package_data]
* = *.txt, *.rst
hello = *.msg

[options.packages.find]
where=src

# [options.extras_require]
# pdf = ReportLab>=1.2; RXP
# rest = docutils>=0.3; pack ==1.1, ==1.3

# [options.data_files]
# /etc/my_package =
#     site.d/00_default.conf
#     host.d/00_default.conf
# data = data/img/logo.png, data/svg/icon.svg



[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
test = pytest

[tool:pytest]
addopts = --verbose
testpaths = tests