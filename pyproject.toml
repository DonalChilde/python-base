[build-system]
requires = ["setuptools >= 65.3.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name="cookiecutter-python-base"
description = "My package description"
# readme = "README.rst"
requires-python = ">=3.7"
keywords = ["Python", "cookiecutter"]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]
dependencies=[
    "cookiecutter",
]
dynamic = ["version","readme"]

[tool.setuptools.dynamic]
version = {attr = "python_base.__VERSION__"}
readme = {file = ["README.rst"]}

[project.optional-dependencies]
dev = [
    # Packaging and Distribution
    "pip",
    "setuptools",
    "wheel",
    "twine",
    "pip-tools",

    # Linting and Formatting
    "black",
    "coverage",
    "pylint",
    "mypy",
    "doc8",

    # Testing
    "tox",
    "pytest",
    "pytest-cov",

    # Documentation
    "Sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "myst-parser",

    # Source control
    "pre-commit",

    # Tools
    "pysnooper",

    # Vscode
    "esbonio",
    "rst2html",
    "rstcheck",

    # For the possible project skeletons
    "Click",
    "Typer",
    "Flask",
    "Fastapi",
    "uvicorn[standard]",
]


# [project.scripts]
# my-script = "my_package.module:function"

[tool.isort]
profile = "black"
src_paths = ["src", "test"]

[tool.black]
line-length = 88
target-version = ['py310']

# [tool.pylint.messages_control]
# disable = [
#     "raw-checker-failed", 
#     "bad-inline-option", 
#     "locally-disabled", 
#     "file-ignored", 
#     "suppressed-message", 
#     "useless-suppression", 
#     "deprecated-pragma", 
#     "use-symbolic-message-instead"
# ]

# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = "-ra -q"
# testpaths = [
#     "tests",
#     "integration",
# ]